[ { "title": "跨域", "url": "/posts/%E8%B7%A8%E5%9F%9F/", "categories": "笔记", "tags": "跨域", "date": "2022-03-31 12:28:00 +0000", "snippet": "同源策略浏览器故意设置的一个功能限制，主要是为了保护用户隐私。CORS和JSONP是跨域的两种方法。JSONP是对IE的妥协。浏览器规定：若JS运行在源A里，那么只能获取源A的数据，而不能获取源B的数据，即是不允许跨域。 问题的根源：浏览器无法区分正常请求者和黑客，他们只有referer不一样，所以不同源的页面之间，不准相互访问数据同源策略知识限制了数据访问，我们引用js，css和图片时，我们只是在引用，我们并不知道其内容源window.origin&amp;lt;!-- 或者 location.origin --&amp;gt;可以得到当前源源=协议+域名+端口号如果两个url的协议、域名、端口号完全一致，那么这两个url是同源的 ## CORS CORS:跨域资源共享 如果要共享数据，需要提前声明 例如 qq.com在响应头写zhan.com可以访问，具体语法：Access-Control-Allow-Origin:&quot;http://example.com:8888&quot;## JSONP JSONP和json并没有什么直接的关系，JSONP主要是用于IE的跨域需求，因为IE并不支持CORS JSONP的原理：虽然我们不可以直接访问.json数据，但是我们可以访问.js文件，然后让.js夹带我们需要的数据即可 实现：创建一个script标签，请求一个js，js夹带我们需要的数据，由于是script标签，只可以发GET请求，所以JSONP不支持POST请求，并且JSONP不能像ajax一样详细的得到状态码和请求头，只能知道是失败还是成功" }, { "title": "浏览器渲染原理", "url": "/posts/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E5%8E%9F%E7%90%86/", "categories": "笔记", "tags": "浏览器渲染", "date": "2022-03-31 12:28:00 +0000", "snippet": " 浏览器渲染原理 浏览器渲染的6个步骤 三种不同的渲染(更新)方式 第一种 全走 第二种 跳过布局 第三种 跳过布局与绘制 动画的原理浏览器渲染原理chrome开发者工具可以查看哪些是重新绘制渲染的步骤：chrome右键“检查”-&amp;gt; 按下esc -&amp;gt; 左上角三个点 -&amp;gt; 点击”Rendering” -&amp;gt; 勾上”paint flashing” 然后页面重新渲染时绿色就表示重新绘制(repaint)浏览器渲染的6个步骤 创建HTML DOM 创建CSS DOM 合成以上两棵树 布局 Layout 绘制 paint 合成图层 composite 三种不同的渲染(更新)方式 有一个网站可以查看各属性重新渲染时到底触发哪种方式点击跳转csstriggers 第一种 全走 JS/CSS -&amp;gt; style -&amp;gt; Layout -&amp;gt; Paint -&amp;gt; Compositediv.remove 触发当前元素消失，页面重新绘制，其它元素全部relayout 第二种 跳过布局 JS/CSS -&amp;gt; Style -&amp;gt; Paint -&amp;gt; Composite如果改变背景颜色，直接repaint+composite 第三种 跳过布局与绘制 JS/CSS -&amp;gt; Style -&amp;gt; Composite改变transform，只需要composite 动画的原理帧：每个静止的画面一般播放速度电视时24帧，游戏是30帧一个小demohtml&amp;lt;div id=&quot;demo&quot;&amp;gt;&amp;lt;/div&amp;gt;css #demo { width: 100px; height: 100px; border: 1px solid red; transition: all is linear; } #demo.end { transform: translateX(200px); }js let n = 1 let id = setTimeout(() =&amp;gt; { demo.classList.add(&#39;end&#39;) }, 1000);" }, { "title": "jquery使用", "url": "/posts/%E4%BD%BF%E7%94%A8jquery/", "categories": "笔记", "tags": "jquery", "date": "2022-03-31 12:28:00 +0000", "snippet": "如何使用jQuery虽然已经是2021年了，但是jquery仍然是JavaScript应用非常广泛的库，学习jquery可以让我们学习一些封装的技巧。window.jQuery()是我们提供的全局函数，jQuery的设计思想就是接受一个选择器，然后得到这些元素，然后返回一个对象可以操作这些元素。核心思想：选择某个网页元素，然后对其进行某种操作。构造函数jQuery()简写为$.jQuery 如何获取元素　　$(document) //选择整个文档对象　　$(&#39;#myId&#39;) //选择ID为myId的网页元素　　$(&#39;div.myClass&#39;) // 选择class为myClass的div元素　　$(&#39;input[name=first]&#39;) // 选择name属性等于first的input元素jQuery 的链式操作是怎样的因为jquery的方法每次return this ，就是返回一个对象，所以可以持续操作。　　$(&#39;div&#39;) //找到div元素　　　.find(&#39;h3&#39;) //选择其中的h3元素　　　.eq(2) //选择第3个h3元素　　　.html(&#39;Hello&#39;); //将它的内容改为HellojQuery 如何创建元素 $(&#39;fatherDiv&#39;).append(&#39;&amp;lt;p&amp;gt;hi&amp;lt;/p&amp;gt;&#39;); //利用append在父元素fatherDiv中加入p元素jQuery 如何移动元素第一种方法是使用.insertAfter()，把div元素移动p元素后面：　　$(&#39;div&#39;).insertAfter($(&#39;p&#39;));第二种方法是使用.after()，把p元素加到div元素前面：　　$(&#39;p&#39;).after($(&#39;div&#39;));jQuery 如何修改元素的属性.html() 取出或设置html内容　　.text() 取出或设置text内容　　.attr() 取出或设置某个属性的值　　.width() 取出或设置某个元素的宽度　　.height() 取出或设置某个元素的高度　　.val() 取出某个表单元素的值jQuery一些方法　　$.trim() 去除字符串两端的空格。　　$.each() 遍历一个数组或对象。　　$.inArray() 返回一个值在数组中的索引位置。如果该值不在数组中，则返回-1。　　$.grep() 返回数组中符合某种标准的元素。　　$.extend() 将多个对象，合并到第一个对象。　　$.makeArray() 将对象转化为数组。　　$.type() 判断对象的类别（函数对象、日期对象、数组对象、正则对象等等）。　　$.isArray() 判断某个参数是否为数组。　　$.isEmptyObject() 判断某个对象是否为空（不含有任何属性）。　　$.isFunction() 判断某个参数是否为函数。　　$.isPlainObject() 判断某个参数是否为用&quot;{}&quot;或&quot;new Object&quot;建立的对象。　　$.support() 判断浏览器是否支持某个特性。jQuery 用到的设计模式 jQuery()是一个函数，但是我们构造其对象时却不需要使用new。 重载。$(支持多种参数) 用闭包隐藏细节。 setter/getter。 $div.text()既可以读，又可以写。 $.fn 是 $.prototype的别名。 适配器模式。jQuery会针对不同的浏览器使用不同的代码。 参考 阮一峰的博客 jQuery API中文文档 自己使用jQuery封装DOMgithub链接" }, { "title": "transform使用", "url": "/posts/transform/", "categories": "笔记", "tags": "transform", "date": "2022-03-31 12:28:00 +0000", "snippet": "transform全解 transition经验技巧 在开发者工具调试时,按住键盘上’↑’ ‘↓’可以调整数字大小,按住ALT就可以调整小数,按住shift可以调更大四个常用功能 1.位移translate 位移 ```css.container{transform:translateX(50px);/在x方向移50px/} ### 指定视点 z轴需要加一个父元素,指定视点,当translate大就离视点远,小就近.transform:translate(50px,50px);transform:translate(x,y);```css #demo:hover{transform: translateZ(0px);}.wrapper{ perspective: 1000px; border: 1px solid red;}translate 3dtranslate(x,y,z);translate(50%);向右偏移 身位50%translate(-50%);向左偏移 身位50%translate(-50%,-50%);可以做绝对定位的居中 .wrapper{ position: relative; } .center{ position: absolute; left: 50%; right: 50%; transform: translate(-50%,-50%); } 2.缩放scale.transform:hover{ transform: scale(2); transition:all 1s;}当鼠标浮上去时,变大两倍用1s变化,变成动画效果还有scaleX,scaleY的用法3. 旋转rotatetransform:rotate(45deg);从12点方向顺时针旋转45°,默认垂直于屏幕轴旋转.一般360°旋转用于制作loading4. 倾斜 skewtransform:skewX(15deg);5. 多重使用 用空格隔开就好transform:scale(1,2) rotate(45deg); transform:none;//取消所有transition 过渡主要是用来呈现一个动画的效果语法：transition:属性名 时长 过渡方式 延迟可以用all来代表所有属性，但是display无法过渡" }, { "title": "jquery封装DOM", "url": "/posts/jquery%E5%B0%81%E8%A3%85DOM/", "categories": "笔记", "tags": "jquery", "date": "2022-03-31 12:28:00 +0000", "snippet": "Table of Contents generated with DocToc 利用jQuery 封装DOM 闭包&amp;amp;链式操作 利用jQuery 封装DOM闭包&amp;amp;链式操作解决git push时出现 fatal: unable to access ‘https://github.com/zhan-xh/DOM-2-jQuery.git/’: Failed to connect to github.com port 443: Timed out问题git config --global --unset http.proxygit config --global --unset https.proxy window.jQuery() 是我们提供的全局函数jQuery()接受一个选择器,用来获取对应的元素,但他却不返回这些元素,相反,它返回一个对象,称为jQuery构造出来的对象,这个对象有一个方法可以操作对应的元素. 在obj.fn()中的函数的this 就是obj所以在jquery中的方法中,this就是那个对象 链式操作 api.addClass(&#39;red&#39;) .addClass(&#39;blue&#39;) .addClass(&#39;green&#39;)//因为api.addClass(&#39;red&#39;)返回的是api(一个对象),所以就还可以对api.addClass(&#39;red&#39;)进行点操作//这就是链式操作 闭包即是函数可以访问外部的变量,在addClass方法中,访问了外部的元素elements```javascriptwindow.jQuery = function (selector) { const elements = document.querySelectorAll(selector) return { addClass(className) { for (let i = 0; i &amp;lt; elements.length; i++) { elements[i].classList.add(className) } return this//保证了链式操作 this就是api 当obj.fn()时,this就是obj } } // return api //返回一个可以操作elements的对象}```" }, { "title": "zhan的第一个博客", "url": "/posts/firstblog/", "categories": "测试", "tags": "测试", "date": "2022-03-31 12:28:00 +0000", "snippet": "冬树的第一篇博客这是插入图片这里可以放代码片段噢～//代码片段int main(){ hello world;}" }, { "title": "HTML笔记", "url": "/posts/HTML%E7%AC%94%E8%AE%B0/", "categories": "笔记", "tags": "HTML", "date": "2022-03-31 12:28:00 +0000", "snippet": "快捷操作 在vscode中，按“！”再按下回车，html起手式就完成了。 按“table+” enter 就可以快捷生成table的基本样式章节标签&amp;amp;&amp;amp;全局属性章节标签 h1~h6 标题 section 章节 p 段落 footer 常常用于版权声明；格式为：```&amp;copy;版权所有zxh* main 主要内容：位于header和footer之间* aside 旁支内容：用于导航或者参考资料文献* div 划分### 全局属性1. class 分类 用来标记一个类```html&amp;lt;div class=&quot;midddle&quot;&amp;gt;test&amp;lt;/div&amp;gt;&amp;lt;style&amp;gt;.middle{ background:black;} &amp;lt;/style&amp;gt; contenteditable 用户是否可编辑```html 这个div包裹的内容用户可以自己编辑 3. 让style显示并且可以编辑```html&amp;lt;style contenteditable&amp;gt; style{ display:block; border:1px solid red; } .middle{ background:black; } &amp;lt;/style&amp;gt; hidden 隐藏标签 id 标记，不到万不得以不要使用id，因为当两个id一样时，并不会报错 Tabindex tab访问顺序页面中所有可以交互的地方都可以用tab键访问，因为有些时候没有鼠标tabindex=1tabindex=2tabindex=0 页面最后访问tabindex=-1 tab永远不会访问到这里 title 默认样式&amp;amp;&amp;amp;CSS reset html具有自带样式，但现在以及非常落后，所以我们每次都重置，称之为css reset *{ margin:0; padding:0 box-sizing:border-box;}ol,ul{ list-style:none;}a{ text-decoration:none;}table{ border-collapse:collapse; border-spacing:0;} 常用的内容标签 ol 有序列表 ul 无序列表 dl 描述列表 pre 其包含的内容空格和enter将会保留 code 里的字体是等宽的，里面包含代码 hr 水平分割线 br 换行 a 超连接 &amp;lt;a href=&quot;http://qq.com&quot; target=&quot;_blank&quot;&amp;gt;QQ&amp;lt;/a&amp;gt; em 强调 语气强调 strong 本身很重要 quote 引用 blockquote 换行引用，块级引用HTML重要标签a属性 href 链接，地址 target 指定窗口打开 href取值 网址http://google.comhttps://google.com//google.com 路径/a/b/cindex.html./index.html 伪协议 &amp;lt;a href=&quot;javascript:alert(1);&quot;&amp;gt;javascript为协议&amp;lt;/a&amp;gt;&amp;lt;a href=&quot;mailto:2459522339@qq.com&quot;&amp;gt;邮箱伪协议&amp;lt;/a&amp;gt;&amp;lt;a href=&quot;tel:19898078992&quot;&amp;gt;打电话给我&amp;lt;/a&amp;gt; id```html xx#### a的target取值1. _blank 空的新窗口打开2. _top 顶级窗口打开3. _parent 父级窗口打开4. _self 当前所在窗口打开 ### tableb 标签 ```html&amp;lt;table&amp;gt; &amp;lt;thead&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;th&amp;gt;&amp;lt;/th&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/thead&amp;gt; &amp;lt;tbody&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;th&amp;gt;&amp;lt;/th&amp;gt; &amp;lt;td&amp;gt;&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/tbody&amp;gt; &amp;lt;tfoot&amp;gt; &amp;lt;/tfoot&amp;gt; &amp;lt;/table&amp;gt;### img标签 #### 作用 发出一个get请求，展示一张图片 #### 属性 alt 可选的，代替错误显示 &amp;lt;img src=&quot;dog.jpg&quot; alt=&quot;一只狗仔&quot; &amp;gt; height 只写高度，宽度会自适应 width 同上 #### 事件 onload 是否加载成功 onerror 加载失败响应式&amp;lt;style&amp;gt;img{ max-width:100%;}&amp;lt;/style&amp;gt;form标签 表单作用发get或者post强求，然后刷新页面action用来控制请求哪个页面method 控制使用get还是post请求&amp;lt;form action=&quot;/xxx&quot; method=&quot;POST&quot;&amp;gt;&amp;lt;input type=&quot;text&quot;/&amp;gt;&amp;lt;input type=&quot;submit&quot;/&amp;gt;&amp;lt;/form&amp;gt;form的属性 autocomplete:off on;控制是否可以自动填充 target=”_blank” 告诉浏览器表单提交到哪个页面form的属性 onsubmit 当用户点击提交时触发的事件```html点击input和button有什么区别呢?区别是button中还可以添加其他标签,而在form中必须有一个type=submit的按钮,因为只有submit才能提交表单.### input标签```html&amp;lt;input type=&quot;text| color| password| radio&quot;&amp;gt; password 输入的数据不予显示,以*或者小圆点代替 radio 控制单选 &amp;lt;input name=gender type=&quot;radio&quot;/&amp;gt;男&amp;lt;input name=gender type=&quot;radio&quot;/&amp;gt;女 checkbox 控制多选 &amp;lt;input name=hobby type=&quot;checkbox&quot;/&amp;gt;唱&amp;lt;input name=hobby type=&quot;checkbox&quot;/&amp;gt;跳&amp;lt;input name=hobby type=&quot;checkbox&quot;/&amp;gt;rap file 选择文件 &amp;lt;input type=&quot;file&quot; multiple /&amp;gt;multiple控制多选 textarea 多行文本&amp;lt;textarea style=&quot;resize:none;width:50%;height=300px;&quot;&amp;gt;&amp;lt;/textarea&amp;gt;select&amp;lt;select &amp;gt; &amp;lt;option value=&quot;1&quot;&amp;gt;周一&amp;lt;/option&amp;gt; &amp;lt;option value=&quot;2&quot;&amp;gt;周二&amp;lt;/option&amp;gt; &amp;lt;option value=&quot;&quot;&amp;gt;-请选择-&amp;lt;/option&amp;gt;默认&amp;lt;/select&amp;gt;验证器当用户未填内容时,就无法提交表单&amp;lt;input type=&quot;text&quot; required&amp;gt;注意 一般不监听input的click事件 form里面的input必须需要name form里要放一个type=”submit”才能触发submit事件 一般一个网页只有一个h1 利用正则表达式删除[1][2]vscode 编辑-&amp;gt;替换-&amp;gt;使用正则表达式(alt+R)-&amp;gt;[\\d+] 替换为空 一般上传的图片不能超过300k vscode输入meta:vp 就会自动生成响应式" }, { "title": "DOM对象风格封装", "url": "/posts/DOM%E5%AF%B9%E8%B1%A1%E9%A3%8E%E6%A0%BC%E5%B0%81%E8%A3%85/", "categories": "笔记", "tags": "DOM", "date": "2022-03-31 12:28:00 +0000", "snippet": "dom对象风格也叫命名空间风格window.dom是我们提供的全局对象封装包括了增删改查四个方面例如下一个就是封装用来创建节点window.dom = { create(string) { const container = document.createElement(&quot;template&quot;); container.innerHTML = string.trim(); return container.content.firstChild; }}; template可以容纳任何标签，作为容器。 string.trim();是为了去除字符串两端的空格。可以通过以下方式调用 const div = dom.create(&#39;&amp;lt;div&amp;gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&#39;); 一个小技巧已经提交过的文件或者文件夹怎么办？此时更改.gitignore文件对已经提交的文件是无效的。如果是单个文件，可以使用如下命令从仓库中删除：git rm –cached logs/xx.log如果是整个目录：git rm –cached -r logs " }, { "title": "CSS笔记", "url": "/posts/CSS%E7%AC%94%E8%AE%B0/", "categories": "笔记", "tags": "CSS", "date": "2022-03-31 12:28:00 +0000", "snippet": "CSS3学习笔记哪些浏览器支持css的某个元素特性?一个在线网站可以查询点击1. CSS reset*{ margin:0; padding:0 box-sizing:border-box;}ol,ul{ list-style:none;}a{ text-decoration:none;}table{ border-collapse:collapse; border-spacing:0;}2. 体系化学习css搜索css文档 css spec2.1 语法选择器{ 属性名:属性值;}css区分大小写,注释只有/* */2.2 at语法 @charset”utf-8” 必须放在第一行 @import url(2.css) @meida(min-width:100px;){ 语法一}? 2.3 调试css w3c验证器 vscode看代码颜色 webstorm 开发者工具看警告 2.4 border 调试法 使用时每个样式都写border:1px solid red;看位置是否生效,逐行换调试 2.5 关于查资料 关键词+mdn css tricks 张鑫旭的博客 2.6 规范权威 w3ccss2.1中文版,遇到问题再查 3. 文档流 3.1 经验 写多个spanspan{第$个span}*8 Tab 3.2 inline内联 内联:默认从左到右,默认合并在一起块级:类似div,从上至下,独占一行 block元素具体某个元素是否内联,看怎么写样式inline-block不会截断,inline在最后宽度不够时,会阶段从第二行开始 div{display:inline;display:block;} 3.3 注意事项 inline元素不接受width指定 div在未确认width时,width默认auto,有多宽占多宽,不是100% block默认自动计算width,也可以width指定,inline-block也可以指定width inline元素的高度由line-height间接确定,与字体有关,与height无关 block和inline-block都可以设置height 当div中没有内容时,高为0 3.4 溢出overflow的处理方法 overflow:hidden; overflow:scroll; overflow:auto;3.5 脱离文档流当使用float布局时可以脱离文档流float:left;或者 position:absolute/fixed;当脱离文档流时,就不算在内容高度里了4. 盒模型margin是外边距,padding是内边距4.1 content-box与border-boxwidth只含content的盒子就是content-box,包含border padding content的盒子就是border-box4.2 经验 vscode输入.borderbox -&amp;gt;Tab 自动生成 &amp;lt;div class=&quot;borderbox&quot;&amp;gt;&amp;lt;/div&amp;gt; 选择盒模型 box-sizing:border-box; 引入外部css样式表 html头部添加4.3 margin合并 两个孩子之间的上下margin会合并，即是孩子1 的下margin会与孩子2的上margin合并为一个margin，可以用以下代码改变。 display:inline-block; 第一个与最后一个孩子的margin会与parent的margin合并，若不想合并的话有三种解决方式： 加padding 加overflow:hidden 加border margin只有上下合并，没有左右合并 margin合并之间必须没有其他东西，例如padding，有的话就无法合并 4.4 基本单位 长度单位(mdn 搜索width) px 像素 em 相对于自身font-size的倍数 .div{ font-size:20px; border:1px solid red; width:3em;/* 3*font-size=3*20px */} 百分数 rgb(0,0,0) rgba(255,0,127,0) 可以直接使用qq截图取色，按下ctrl即可切换16进制,rgba可以设置透明度，0为全透明，1为不透明 hsl(360,100%,100%) hsl(色相,饱和度,亮度) 5. float布局 先说明：一般要兼容老的浏览器使用flex布局，要兼容IE9，使用float布局，如果只兼容最新的浏览器，使用grid布局 5.1 步骤 子元素加width和flaot:left; 在父元素上写 .clearfix 固定写法div加了float就脱离了文档流了，标签里面的内容为空，加入clearfix就不会了 .clearfix:after{ content:&#39;&#39;; display:block; clear:all;} 5.2 经验 最后一个div不写width，但可以写最大宽度 float是针对IE的，无法响应式 尽量采用display:inline-block; 网页的背景图片，右键检查可以得到地址，可以在img标签使用 outline:1px solid red; 不占宽度的border margin：0 auto；自动居中但是以下方式更好 margin-left:auto;margin-right:auto; 可以采用负margin来实现平均布局，中间加个x（clearfix）可以消除float，外边距也不会合并 6. flex布局 6.1 使用flex布局 采用flex布局```cssbody{display:flex | inline-flex;}2. 控制流动方向```css.container{ flex-direction:row | row-reverse | column | column-reverse;} 控制是否换行 .container{ flex-wrap:wrap | nowrap;} 控制对齐方式 .container{ justify-content: flex-start | flex-end; /*从行首或者行尾开始*/} flex具有多种灵活多变的对齐方式，具体参考MDN文档justify-content item的属性 order 排序可以利用order改变item的显示顺序，order默认为0 .item:first-child{ order:5;}.item:nth-child(2){ order:100;}.item:nth-child(3){ order:30;}.item:last-child{ order:5;} flex-grow 剩余空间分配这个属性主要是控制item多余空间的分配，不写的话默认为0flex-grow:0;的意思不是宽度为0 ，而是只更具内容来确定宽度 .item:first-child{ flex-grow:1;}.item:nth-child(2){ flex-grow:2;} 以上代码的意思是，在容器中剩余的空间里，平均分成三份，第一个孩子占一份，第二个孩子占2份。 flex-shrink 元素的收缩flex 元素仅在默认宽度之和大于容器的时候才会发生收缩，其收缩的大小是依据 flex-shrink 的值。默认是1，代表当内容空间不足时，大家一起收缩。当flex-shrink:0;时是防止变瘦，无论多窄我都不收缩，比如淘宝就是这样设计的。 align-items 交叉轴方向上的对齐方式例如 .container{ align-items:center; /*居中 主轴横向对齐*/}.container2{ justify-content:center | space-between; } 6.2 flex 实践 vertical-align 垂直对齐 .logo{ vertical-align:middle;} 以上使用方法常常用在图片logo上，防止出现奇怪的空隙。 不要轻易把width和height都写死，因为用户使用不同的设备观看，但可以写最大最小宽度 .container{ min-width:500px; max-width:500px; flex基本可以满足所有布局flex的MDN详细解释Flexbox 7. grid布局 在css布局中，如果是一维布局我们采用flex，二维布局采用grid在grid布局中，分container和itemsgrid尤其适合不规则布局，像衣柜一样的布局都可以使用grid 7.1 成为container items .container{ display:grid | inline-grid;}.container{ grid-template-columns:40px 50px auto 50px 40px; grid-template-rows:25% 100px auto; }.item-a{ /*item可以设置范围，其中数字代表线条的名字*/ grid-column-start:2; grid-column-end:3; grid-row-start:1; grid-row-end:3;}7.2 fr 份比如分成2行3列.container{ display:grid; grid-template-columns:1fr 1fr 1fr; grid-template-rows:1fr 1fr; grid-gap:12px;/*格子间隙*/}7.3 grid-template-areas 分区html&amp;lt;body&amp;gt;&amp;lt;div class=&quot;container&quot;&amp;gt; &amp;lt;header&amp;gt;herder&amp;lt;/header&amp;gt; &amp;lt;aside&amp;gt;aside&amp;lt;/aside&amp;gt; &amp;lt;main&amp;gt;main&amp;lt;/main&amp;gt; &amp;lt;div class=&quot;ad&quot;&amp;gt;ad&amp;lt;/div&amp;gt; &amp;lt;footer&amp;gt;footer&amp;lt;/footer&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/body&amp;gt;css代码部分 .container { min-height: 100vh; display: grid; grid-template-rows: 60px auto 60px; grid-template-columns: 100px auto 100px; grid-template-areas: &quot;header header header&quot; &quot;aside aside aside&quot; &quot;footer footer footer&quot; } .container &amp;gt;*{ border: 1px solid red; } .container &amp;gt; header{ grid-area: header; } .container &amp;gt;aside{ grid-area: aside; } .container&amp;gt;main{ grid-area: main; } .container&amp;gt; .ad{ grid-area: ad; } .container&amp;gt;footer{ grid-area: footer; }" }, { "title": "CSS定位", "url": "/posts/CSS%E5%AE%9A%E4%BD%8D/", "categories": "笔记", "tags": "CSS", "date": "2022-03-31 12:28:00 +0000", "snippet": "CSS定位1.一个div的分层首先需要明确一个点：布局是屏幕平面上的，而定位是垂直于屏幕上的，background是包含border的，即是background处于border更下一层。div分层从上往下定位元素z-index为正的元素，在所有元素之上，只要是正常文字，不管出现在那个div里，根据先后出现覆盖。 定位元素（z-index=0 1 2…..） 内联子元素(文字内容) 浮动元素（float:left right）//脱离了文档流，比之前上升了一点，即是浮动 块级子元素(div) border background 定位元素(z-index=-1) 2.position的5个取值 默认值position:static;即是当前元素在文档流中，一般不升起来，不脱离文档流。 2.1相对定位 用于位移这种定位占的位置不变，但显示的位置根据代码有所偏移。其他元素任然认为其在原位。 .container{position:relative;top:10px;left:10px;} 用于给绝对定位absolute做父亲 配合z-index使用z-index默认每个元素都是auto，但是计算出来是0z-index=1;压住0，不会覆盖别人z-index=-1;使其向下沉，比0小2.2绝对定位position:absolute;使用场景 脱离原来的位置，另起一层，比如对话框的关闭。一般关闭按钮都用绝对定位来做，相对于父元素祖先元素定位。使用绝对定位必须有个父元素，在其父元素上加position:relative;儿子用 .child{ position:absolute; top:0; right:0;} 鼠标提示white-space:nowrap;//文字内容不允许换行html```html点击 提示内容css代码```css button { position: relative; } button span { position: absolute; border: 1px solid red; white-space: nowrap; bottom: calc(100%+10px); left: 50%; transform: translateX(-50%); } button span { display: none; } button:hover span { display: inline-block; }注意： absolute是相对于祖先元素中最近的一个定位元素(position不是static)定位的。 某些浏览器不写top和right位置会发生错乱。 left：100%;指的是距左100% 善用 善用left：50%; 加上负margin 能很好的居中显示 展示一个hover：chrome控制台-&amp;gt; style右上角：hov -&amp;gt; 勾上hover 2.3 固定定位fixed position:fixed; 使用场景 烦人的广告相对于视口定位 .fixed{ position: fixed; left: 10px; bottom: 10px; } 让一个东西居中```css .container{ display: flex; justify-content: center; align-items: center; } ##### 经验* 不要把fixed属性放在一个含有transform属性的元素里，会出现bug。* 可以做一个回到顶部按钮* 手机上尽量不要用fixed，坑很多。### 2.4 粘贴定位 sticky当未到我时，我就像文档流一样向上滑动，当我到顶快要看不见时，我就像粘在顶部一样，不动了，特别适合标题导航之类，但兼容性不好，许多浏览器不能使用。```css.container{ position: -webkit-sticky; top: 0;}经验 如果写了absolute，一般都要补一个relative 若写了absolute或者fixed，一定要补一个top和left层叠上下文MDN文档参考 css层叠上下文z-index谁的数值大，谁的层数就高，就可以覆盖别人，默认z-index=0;当z-index=-1|-2|-3;则其层数比background更低。从上往下，层数降低 定位元素（z-index=0 1 2…..） 内联子元素(文字内容) 浮动元素（float:left right）//脱离了文档流，比之前上升了一点，即是浮动 块级子元素(div) border background 定位元素(z-index=-1)每一个层叠上下文相当于一个小世界作用域，处在同一个世界的z-index才可以比较，不同作用域的z-index无法比较。 如何创建一个作用域 当position:relative; 令z-index=0;注意不是auto，auto不会创建层叠上下文 display:flex; opacity 只要不为1就可以创建 position:fixed; transform:none; 注意默认层叠上下文是html元素，html会把所有元素包裹起来" }, { "title": "你好，世界！", "url": "/posts/hello-world/", "categories": "随笔", "tags": "生活", "date": "2022-03-26 02:34:00 +0000", "snippet": "感谢关注～这里可以放代码片段噢～//代码片段int main(){ hello world;}" } ]
