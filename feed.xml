<feed xmlns="http://www.w3.org/2005/Atom"> <id>/</id><title>冬树</title><subtitle>这是通过Chirpy主题配置而成的</subtitle> <updated>2022-03-31T15:51:54+00:00</updated> <author> <name>zhan-xh</name> <uri>/</uri> </author><link rel="self" type="application/atom+xml" href="/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 zhan-xh </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>跨域</title><link href="/posts/%E8%B7%A8%E5%9F%9F/" rel="alternate" type="text/html" title="跨域" /><published>2022-03-31T12:28:00+00:00</published> <updated>2022-03-31T14:54:52+00:00</updated> <id>/posts/%E8%B7%A8%E5%9F%9F/</id> <content src="/posts/%E8%B7%A8%E5%9F%9F/" /> <author> <name>冬树</name> </author> <category term="笔记" /> <summary> 同源策略 浏览器故意设置的一个功能限制，主要是为了保护用户隐私。CORS和JSONP是跨域的两种方法。JSONP是对IE的妥协。 浏览器规定：若JS运行在源A里，那么只能获取源A的数据，而不能获取源B的数据，即是不允许跨域。 问题的根源：浏览器无法区分正常请求者和黑客，他们只有referer不一样，所以不同源的页面之间，不准相互访问数据 同源策略知识限制了数据访问，我们引用js，css和图片时，我们只是在引用，我们并不知道其内容 源 window.origin &amp;lt;!-- 或者 location.origin --&amp;gt; 可以得到当前源 源=协议+域名+端口号 如果两个url的协议、域名、端口号完全一致，那么这两个url是同源的 ## CORS CORS:跨域资源共享 如果要共享数据，需要提前声明 例如 qq.com在响应头写zhan.com可以访问，具体语法： A... </summary> </entry> <entry><title>浏览器渲染原理</title><link href="/posts/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E5%8E%9F%E7%90%86/" rel="alternate" type="text/html" title="浏览器渲染原理" /><published>2022-03-31T12:28:00+00:00</published> <updated>2022-03-31T12:28:00+00:00</updated> <id>/posts/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E5%8E%9F%E7%90%86/</id> <content src="/posts/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E5%8E%9F%E7%90%86/" /> <author> <name>冬树</name> </author> <category term="笔记" /> <summary> 浏览器渲染原理 浏览器渲染的6个步骤 三种不同的渲染(更新)方式 第一种 全走 第二种 跳过布局 第三种 跳过布局与绘制 动画的原理 浏览器渲染原理 chrome开发者工具可以查看哪些是重新绘制渲染的 步骤：chrome右键“检查”-&amp;gt; 按下esc -&amp;gt; 左上角三个点 -&amp;gt; 点击”Rendering” -&amp;gt; 勾上”paint flashing” 然后页面重新渲染时绿色就表示重新绘制(repaint) 浏览器渲染的6个步骤 创建HTML DOM 创建CSS DOM 合成以上两棵树 布局 Layout 绘制 paint 合成图层 composite ... </summary> </entry> <entry><title>jquery使用</title><link href="/posts/%E4%BD%BF%E7%94%A8jquery/" rel="alternate" type="text/html" title="jquery使用" /><published>2022-03-31T12:28:00+00:00</published> <updated>2022-03-31T15:34:21+00:00</updated> <id>/posts/%E4%BD%BF%E7%94%A8jquery/</id> <content src="/posts/%E4%BD%BF%E7%94%A8jquery/" /> <author> <name>冬树</name> </author> <category term="笔记" /> <summary> 如何使用jQuery 虽然已经是2021年了，但是jquery仍然是JavaScript应用非常广泛的库，学习jquery可以让我们学习一些封装的技巧。 window.jQuery()是我们提供的全局函数，jQuery的设计思想就是接受一个选择器，然后得到这些元素，然后返回一个对象可以操作这些元素。 核心思想：选择某个网页元素，然后对其进行某种操作。 构造函数jQuery()简写为$. jQuery 如何获取元素 　　$(document) //选择整个文档对象 　　$('#myId') //选择ID为myId的网页元素 　　$('div.myClass') // 选择class为myClass的div元素 　　$('input[name=first]') // 选择name属性等于first的input元素 jQuery 的链式操作是怎样的 因为jquery的方法每次ret... </summary> </entry> <entry><title>transform使用</title><link href="/posts/transform/" rel="alternate" type="text/html" title="transform使用" /><published>2022-03-31T12:28:00+00:00</published> <updated>2022-03-31T15:43:20+00:00</updated> <id>/posts/transform/</id> <content src="/posts/transform/" /> <author> <name>冬树</name> </author> <category term="笔记" /> <summary> transform全解 transition 经验技巧 在开发者工具调试时,按住键盘上’↑’ ‘↓’可以调整数字大小,按住ALT就可以调整小数,按住shift可以调更大 四个常用功能 1.位移translate 位移 ```css .container{ transform:translateX(50px); /在x方向移50px/ } ### 指定视点 z轴 需要加一个父元素,指定视点,当translate大就离视点远,小就近. transform:translate(50px,50px); transform:translate(x,y); ```css #demo:hover{ transform: translateZ(0px); } .wrapper{ perspective: 1000px; border... </summary> </entry> <entry><title>jquery封装DOM</title><link href="/posts/jquery%E5%B0%81%E8%A3%85DOM/" rel="alternate" type="text/html" title="jquery封装DOM" /><published>2022-03-31T12:28:00+00:00</published> <updated>2022-03-31T12:28:00+00:00</updated> <id>/posts/jquery%E5%B0%81%E8%A3%85DOM/</id> <content src="/posts/jquery%E5%B0%81%E8%A3%85DOM/" /> <author> <name>冬树</name> </author> <category term="笔记" /> <summary> Table of Contents generated with DocToc 利用jQuery 封装DOM 闭包&amp;amp;链式操作 利用jQuery 封装DOM 闭包&amp;amp;链式操作 解决git push时出现 fatal: unable to access ‘https://github.com/zhan-xh/DOM-2-jQuery.git/’: Failed to connect to github.com port 443: Timed out 问题 git config --global --unset http.proxy git config --global --unset https.proxy window.jQuery() 是我们提供的全局函数 jQuery()接受一个选择器,用来获取对... </summary> </entry> </feed>
